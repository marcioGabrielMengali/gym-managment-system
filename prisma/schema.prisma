// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Gym {
  id          String    @id() @default(uuid())
  companyName String    @map("company_name")
  ein         String    @unique()
  password    String
  country     String
  state       String
  zipCode     String    @map("zip_code")
  city        String
  createdAt   DateTime  @default(now()) @map("created_at")
  members     Member[]
  payments    Payment[]

  @@map("gyms")
}

model Member {
  id        String    @id() @default(uuid())
  name      String
  email     String    @unique()
  ssn       String    @unique()
  isActive  Boolean   @default(true) @map("is_active")
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt()
  gym       Gym       @relation(fields: [gymId], references: [id], map: "fk_member_gym")
  gymId     String    @map("gym_id")
  payments  Payment[]

  @@map("members")
}

model Payment {
  id          String   @id() @default(uuid())
  paymentDate DateTime @map("payment_date")
  value       Decimal
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @default(now()) @map("updated_at")
  member      Member   @relation(fields: [memberId], references: [id], map: "fk_payment_member")
  gym         Gym      @relation(fields: [gymId], references: [id], map: "fk_member_gyml")
  memberId    String   @map("member_id")
  gymId       String   @map("gym_id")

  @@map("payments")
}
